{"version":3,"sources":["components/Profile/UserInfo/UserStatus/UserStatus.jsx","components/Profile/UserInfo/UserInfo.jsx","components/Profile/MyPosts/NewPost/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/NewPost/NewPost.jsx","components/Profile/MyPosts/NewPost/NewPostContainer.jsx","components/Profile/MyPosts/MyPosts.jsx","assets/images/like.png","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","selectors/profile-selector.js","components/Profile/ProfileContainer.jsx"],"names":["UserStatus","userStatus","setUserStatus","updateUserStatus","currentID","isAuth","useState","editMode","changeMode","onChange","e","currentTarget","value","autoFocus","onBlur","className","type","onDoubleClick","UserInfo","profile","photos","src","large","userPhoto","alt","fullName","lookingForAJob","lookingForAJobDescription","Preloader","AddPostForm","props","initialValues","postText","onSubmit","values","text","setSubmitting","addPost","handleChange","handleSubmit","isSubmitting","name","disabled","NewPost","NewPostContainer","connect","MyPosts","postsData","Post","message","likeImage","width","likesCount","MyPostsContainer","state","profilePage","map","el","id","Profile","getProfile","getUserStatus","compose","getIsAuth","setProfile","isFetchingChange","getUserProfile","requestUserStatus","setCurrentID","useParams","useEffect"],"mappings":"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","file":"static/js/3.94fd4f2e.chunk.js","sourcesContent":["import './UserStatus.scss';\r\nimport React, { useState } from 'react';\r\n\r\n\r\nconst UserStatus = ({\r\n    userStatus,\r\n    setUserStatus,\r\n    updateUserStatus,\r\n    currentID,\r\n    isAuth }) => {\r\n\r\n    const [editMode, changeMode] = useState(false);\r\n\r\n    let onChangeStatus = (e) => {\r\n        setUserStatus(e.currentTarget.value);\r\n    }\r\n\r\n    let finishEdit = (e) => {\r\n        changeMode(false)\r\n        updateUserStatus(e.currentTarget.value);\r\n    }\r\n\r\n    if (!isAuth && currentID == 23462) {\r\n        return <span>No status</span>\r\n    }\r\n\r\n    if (currentID != 23462) {\r\n        return <span>{userStatus != null\r\n            ? userStatus\r\n            : 'No status'}</span>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <div>\r\n                    <span onDoubleClick={() => changeMode(true)}>{userStatus != null\r\n                        ? userStatus\r\n                        : 'No status'}</span>\r\n                </div>\r\n\r\n                : <div>\r\n                    <input onChange={onChangeStatus} autoFocus={true} onBlur={finishEdit} value={userStatus != null\r\n                        ? userStatus\r\n                        : 'No status'} className='input' type=\"text\" />\r\n                </div>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default UserStatus","import './UserInfo.scss';\r\nimport userPhoto from '../../../assets/images/userPhoto.png'\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport UserStatus from './UserStatus/UserStatus';\r\n\r\nconst UserInfo = ({\r\n    profile,\r\n    userStatus,\r\n    updateUserStatus,\r\n    setUserStatus,\r\n    currentID,\r\n    isAuth }) => {\r\n\r\n    if (!profile || !profile.photos) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className='userInfo'>\r\n            <div className='userInfo__name'>\r\n                <img src={profile.photos.large != null\r\n                    ? profile.photos.large\r\n                    : userPhoto} alt=\"\" />\r\n                <h2>{!isAuth && currentID == '23462' ? 'Test user' : profile.fullName}</h2>\r\n                <UserStatus userStatus={userStatus}\r\n                    updateUserStatus={updateUserStatus}\r\n                    setUserStatus={setUserStatus}\r\n                    currentID={currentID} \r\n                    isAuth={isAuth}/>\r\n            </div>\r\n            <div className='userInfo__block'>\r\n                <div className='userInfo__city'>\r\n                    <h2>Looking for a job: {profile.lookingForAJob === true\r\n                        ? 'Yes'\r\n                        : 'No'}</h2>\r\n                </div>\r\n                <div className=\"userInfo__birthdate\">\r\n                    <h2>Description: {profile.lookingForAJobDescription === true\r\n                        ? profile.lookingForAJobDescription\r\n                        : 'No'}</h2>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserInfo;","import './AddPostForm.scss';\r\nimport { Formik } from 'formik';\r\n\r\nconst AddPostForm = (props) => {\r\n\r\n    let addPost = (text) => {\r\n        props.addPost(text);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ postText: '' }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                addPost(values.postText);\r\n                values.postText = '';\r\n                setSubmitting(false);\r\n\r\n            }}>\r\n            {({\r\n                values,\r\n                handleChange,\r\n                handleSubmit,\r\n                isSubmitting\r\n            }) =>\r\n            (<form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <input\r\n                        className=\"newPost__input\"\r\n                        type=\"text\"\r\n                        name=\"postText\"\r\n                        onChange={handleChange}\r\n                        value={values.postText}\r\n                    />\r\n                </div>\r\n                {/* <Button\r\n                    endIcon={<PostAddIcon />}\r\n                    className='action-btn'\r\n                    variant='contained'\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting}\r\n                >\r\n                    Добавить пост\r\n                </Button> */}\r\n                <button\r\n                    className=\"newPost__button button\"\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting}\r\n                >\r\n                    Add post\r\n                </button>\r\n\r\n            </form>)}\r\n        </Formik>\r\n    )\r\n}\r\n\r\n{/* <button\r\nclassName=\"newPost__button button\"\r\ntype=\"submit\"\r\ndisabled={isSubmitting}\r\n>\r\nДобавить пост\r\n</button> */}\r\n\r\nexport default AddPostForm","import './NewPost.scss';\r\nimport React from 'react';\r\nimport AddPostForm from './AddPostForm/AddPostForm';\r\n\r\nconst NewPost = ({ addPost }) => {\r\n    return (\r\n        <AddPostForm addPost={addPost} />\r\n    );\r\n}\r\n\r\nexport default NewPost;","import { connect } from 'react-redux';\r\nimport { addPost } from '../../../../redux/profileReducer';\r\nimport NewPost from './NewPost';\r\n\r\nconst NewPostContainer = connect(null, {\r\n    addPost\r\n})(NewPost);\r\n\r\nexport default NewPostContainer;","import './MyPosts.scss';\r\nimport NewPostContainer from './NewPost/NewPostContainer';\r\n\r\nconst MyPosts = ({ postsData }) => {\r\n    return (\r\n        <div className='myPosts'>\r\n            <div className='myPosts__posts'>\r\n                <NewPostContainer />\r\n                {postsData}\r\n            </div>\r\n            <div className='myPosts__block'>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","export default __webpack_public_path__ + \"static/media/like.d6e9a73c.png\";","import './Post.scss';\r\nimport userPhoto from '../../../../assets/images/userPhoto.png';\r\nimport likeImage from '../../../../assets/images/like.png';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className='post'>\r\n            <div className='post__row'>\r\n                <div className='post__img'>\r\n                    <img src={userPhoto} alt=\"\" />\r\n                </div>\r\n                <div className='post__text'>\r\n                    {props.message} <img src={likeImage} width=\"20px\" alt=\"likes\" /> {props.likesCount}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\nimport Post from './Post/Post';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData\r\n            .map(el => <Post key={el.id} message={el.message} likesCount={el.likesCount} />)\r\n    };\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, null)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import './Profile.scss';\r\nimport UserInfo from './UserInfo/UserInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = ({\r\n    profile,\r\n    userStatus,\r\n    updateUserStatus,\r\n    setUserStatus,\r\n    currentID,\r\n    isAuth }) => {\r\n\r\n    return (\r\n        <div className='profile'>\r\n            <UserInfo profile={profile}\r\n                userStatus={userStatus}\r\n                updateUserStatus={updateUserStatus}\r\n                setUserStatus={setUserStatus}\r\n                currentID={currentID} \r\n                isAuth={isAuth}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","export const getProfile = (state) => state.profilePage.profile\r\n\r\nexport const getUserStatus = (state) => state.profilePage.userStatus","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    setProfile,\r\n    getUserProfile,\r\n    requestUserStatus,\r\n    updateUserStatus,\r\n    setUserStatus\r\n} from '../../redux/profileReducer';\r\nimport Profile from './Profile';\r\nimport { isFetchingChange } from '../../redux/usersReducer';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n    getProfile,\r\n    getUserStatus,\r\n} from '../../selectors/profile-selector';\r\nimport { getIsAuth } from '../../selectors/auth-selector';\r\n\r\nconst ProfileContainer = ({ \r\n    getUserProfile, \r\n    requestUserStatus, \r\n    profile, \r\n    userStatus, \r\n    updateUserStatus, \r\n    setUserStatus,\r\n    isAuth }) => {\r\n\r\n    const [currentID, setCurrentID] = useState(null);\r\n\r\n    let { id } = useParams();\r\n    useEffect(() => {\r\n        if (!id) {\r\n            id = '23462';\r\n        }\r\n        getUserProfile(id);\r\n        requestUserStatus(id);\r\n        setCurrentID(id)\r\n    }, [])\r\n\r\n    return (\r\n        <div className='profile'>\r\n            <Profile \r\n                profile={profile}\r\n                userStatus={userStatus}\r\n                updateUserStatus={updateUserStatus}\r\n                setUserStatus={setUserStatus} \r\n                currentID={currentID}\r\n                isAuth={isAuth}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: getProfile(state),\r\n        isAuth: getIsAuth(state),\r\n        userStatus: getUserStatus(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        setProfile,\r\n        isFetchingChange,\r\n        getUserProfile,\r\n        requestUserStatus,\r\n        updateUserStatus,\r\n        setUserStatus\r\n    }),\r\n    // withAuthRedirect\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}