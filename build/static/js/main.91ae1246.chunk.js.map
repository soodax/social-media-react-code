{"version":3,"sources":["selectors/auth-selector.js","assets/images/preloader.gif","components/Common/Preloader/Preloader.jsx","assets/images/userPhoto.png","redux/profileReducer.js","redux/usersReducer.js","redux/dialogsReducer.js","reportWebVitals.js","components/News/News.jsx","components/Settings/Settings.jsx","components/Music/Music.jsx","components/Nav/FriendsBar/FriendsItem/FriendsItem.jsx","components/Nav/FriendsBar/FriendsBar.jsx","components/Nav/Nav.jsx","components/Nav/FriendsBar/FriendsBarContainer.jsx","assets/images/react.svg","components/Header/Header.jsx","redux/authReducer.js","components/Header/HeaderContainer.jsx","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx","redux/appReducer.js","App.js","redux/sidebarReducer.js","redux/store-redux.js","index.js","api/api.js"],"names":["getIsAuth","state","auth","isAuth","getLogin","login","Preloader","src","preloader","ADD_POST","SET_PROFILE","SET_USER_STATUS","initialState","postsData","id","message","likesCount","profile","userStatus","addPost","text","type","setProfile","setUserStatus","getUserProfile","userID","dispatch","a","profileApi","getProfile","response","data","requestUserStatus","updateUserStatus","body","resultCode","profileReducer","action","newPostText","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_MAX_USERS_COUNT","IS_FETCHING","IS_FOLLOWING_PROCESS","users","maxUsersCount","maxPageSize","currentPageNumber","isFetching","isFollowingProcess","follow","unfollow","setCurrentPage","isFetchingChange","isFollowingProcessChange","getUsers","usersApi","items","totalCount","followUser","alert","unfollowUser","usersReducer","map","user","followed","filter","ADD_MESSAGE","usersData","name","messagesData","addMessage","dialogsReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","News","Settings","Music","FriendsItem","props","className","FriendsBar","friendsData","el","Nav","connect","sidebar","navData","isActive","to","Header","logout","href","logo","alt","onClick","userPhoto","SET_DATA","email","setData","authProcess","authApi","authReducer","LoginForm","initialValues","password","checkbox","onSubmit","values","setSubmitting","handleChange","handleSubmit","isSubmitting","placeholder","onChange","value","disabled","rememberMe","INITIAL_PROCESS","isInitialized","appReducer","ProfileContainer","React","lazy","DialogsContainer","UsersContainer","app","initialization","promise","Promise","all","useEffect","Suspense","fallback","path","element","replace","sidebarReducer","require","createStore","combineReducers","applyMiddleware","store","dialogsPage","profilePage","usersPage","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById","instance","axios","baseURL","withCredentials","headers","get","post","delete","status","put"],"mappings":"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","file":"static/js/main.91ae1246.chunk.js","sourcesContent":["export const getIsAuth = (state) => state.auth.isAuth\r\n\r\nexport const getLogin = (state) => state.auth.login","export default __webpack_public_path__ + \"static/media/preloader.bbf6c57a.gif\";","import preloader from '../../../assets/images/preloader.gif';\r\n\r\nconst Preloader = () => {\r\n    return <img src={preloader}/> \r\n}\r\n\r\nexport default Preloader;","export default __webpack_public_path__ + \"static/media/userPhoto.10691648.png\";","import { profileApi } from \"../api/api\";\r\n\r\nconst ADD_POST = 'profile/ADD-POST';\r\nconst SET_PROFILE = 'profile/SET_PROFILE';\r\nconst SET_USER_STATUS = 'profile/SET_USER_STATUS';\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        { id: 1, message: 'First post', likesCount: 2 },\r\n        { id: 2, message: 'Second post', likesCount: 4 },\r\n        { id: 3, message: 'Third post', likesCount: 8 },\r\n    ],\r\n    profile: [],\r\n    userStatus: ''\r\n\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, { id: 4, message: action.text, likesCount: 0 }],\r\n                newPostText: ''\r\n\r\n            };\r\n        case SET_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        case SET_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                userStatus: action.userStatus\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPost = (text) => ({ type: ADD_POST, text })\r\nexport const setProfile = (profile) => ({ type: SET_PROFILE, profile })\r\nexport const setUserStatus = (userStatus) => ({ type: SET_USER_STATUS, userStatus })\r\n\r\nexport const getUserProfile = (userID) => {\r\n    return async (dispatch) => {\r\n        let response = await profileApi.getProfile(userID);\r\n        dispatch(setProfile(response.data));\r\n    }\r\n}\r\n\r\nexport const requestUserStatus = (userID) => {\r\n    return async (dispatch) => {\r\n        let response = await profileApi.requestUserStatus(userID);\r\n        dispatch(setUserStatus(response.data));\r\n    }\r\n}\r\n\r\nexport const updateUserStatus = (body) => {\r\n    return async (dispatch) => {\r\n        let response = await profileApi.updateUserStatus(body);\r\n        \r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setUserStatus(body));\r\n        }\r\n    }\r\n}\r\n\r\nexport default profileReducer","import { usersApi } from \"../api/api\"\r\n\r\nconst FOLLOW = 'users/FOLLOW';\r\nconst UNFOLLOW = 'users/UNFOLLOW';\r\nconst SET_USERS = 'users/SET-USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET-CURRENT-PAGE';\r\nconst SET_MAX_USERS_COUNT = 'users/SET-MAX-USERS-COUNT';\r\nconst IS_FETCHING = 'users/IS-FETCHING';\r\nconst IS_FOLLOWING_PROCESS = 'users/IS_FOLLOWING_PROCESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    maxUsersCount: 200,\r\n    maxPageSize: 5,\r\n    currentPageNumber: 1,\r\n    isFetching: false,\r\n    isFollowingProcess: [],\r\n};\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userID) {\r\n                        return { ...user, followed: true };\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userID) {\r\n                        return { ...user, followed: false }\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: [...action.users]\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPageNumber: action.currentPageNumber\r\n            };\r\n        case SET_MAX_USERS_COUNT:\r\n            return {\r\n                ...state, maxUsersCount: action.maxUsersCount\r\n            };\r\n        case IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching,\r\n            };\r\n        case IS_FOLLOWING_PROCESS:\r\n            return {\r\n                ...state,\r\n                isFollowingProcess: action.isFollowingProcess\r\n                    ? [...state.isFollowingProcess, action.userID]\r\n                    : state.isFollowingProcess.filter(id => id !== action.userID)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const follow = (userID) => ({ type: FOLLOW, userID })\r\nexport const unfollow = (userID) => ({ type: UNFOLLOW, userID })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPageNumber) => ({ type: SET_CURRENT_PAGE, currentPageNumber })\r\nexport const setMaxUsersCount = (maxUsersCount) => ({ type: SET_MAX_USERS_COUNT, maxUsersCount })\r\nexport const isFetchingChange = (isFetching) => ({ type: IS_FETCHING, isFetching })\r\nexport const isFollowingProcessChange = (isFollowingProcess, userID) => ({ type: IS_FOLLOWING_PROCESS, isFollowingProcess, userID })\r\n\r\nexport const getUsers = (currentPageNumber, maxPageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(isFetchingChange(true));\r\n        let response = await usersApi.getUsers(currentPageNumber, maxPageSize);\r\n        dispatch(setUsers(response.data.items));\r\n        dispatch(setMaxUsersCount(response.data.totalCount));\r\n        dispatch(isFetchingChange(false));\r\n    }\r\n}\r\n\r\nexport const followUser = (userID, isAuth) => {\r\n    return async (dispatch) => {\r\n        if (!isAuth) {\r\n            return alert('You must be logged in!')\r\n        }\r\n        let response = await usersApi.followUser(userID);\r\n        dispatch(isFollowingProcessChange(true, userID));\r\n\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(follow(userID));\r\n            dispatch(isFollowingProcessChange(false, userID));\r\n        }\r\n    }\r\n}\r\n\r\nexport const unfollowUser = (userID, isAuth) => {\r\n    return async (dispatch) => {\r\n        if (!isAuth) {\r\n            return alert('You must be logged in!')\r\n        }\r\n        let response = await usersApi.unfollowUser(userID);\r\n        dispatch(isFollowingProcessChange(true, userID));\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(unfollow(userID));\r\n            dispatch(isFollowingProcessChange(false, userID));\r\n        }\r\n    }\r\n}\r\n\r\nexport default usersReducer","const ADD_MESSAGE = 'dialogs/ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    usersData: [\r\n        { id: 1, name: 'Person 1' },\r\n        { id: 2, name: 'Person 2' },\r\n        { id: 3, name: 'Person 3' },\r\n    ],\r\n\r\n    messagesData: [\r\n        { id: 1, message: 'Hello' },\r\n        { id: 2, message: 'How are you?' },\r\n        { id: 3, message: 'Good bye!' },\r\n    ],\r\n\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, { id: 4, message: action.message }],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessage = (message) => ({ type: ADD_MESSAGE, message });\r\n\r\nexport default dialogsReducer;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './News.scss';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import './Settings.scss';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import './Music.scss';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import './FriendsItem.scss';\r\n\r\nconst FriendsItem = (props) => {\r\n    return (\r\n        <div className='friendsItem'>\r\n            {props.name}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FriendsItem;","import './FriendsBar.scss';\r\nimport FriendsItem from './FriendsItem/FriendsItem';\r\n\r\nconst FriendsBar = (props) => {\r\n\r\n    let friendsElements = props.friendsData\r\n        .map(el => <FriendsItem id={el.id} name={el.name} />);\r\n    return (\r\n\r\n        <div className='friendsBar'>\r\n            <h2>Friends</h2>\r\n            <div className='friendsBar__row'>\r\n                {/* {friendsElements} */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FriendsBar;","import { NavLink } from 'react-router-dom';\r\nimport './Nav.scss';\r\nimport FriendsBarContainer from './FriendsBar/FriendsBarContainer';\r\n\r\nconst Nav = (props) => {\r\n    return (\r\n        <nav className='nav'>\r\n            <ul>\r\n                <li> <NavLink className={navData => navData.isActive ? 'nav__link_active' : 'nav__link'} to='/profile'>Profile</NavLink> </li>\r\n                <li> <NavLink className={navData => navData.isActive ? 'nav__link_active' : 'nav__link'} to='/users'>Users</NavLink> </li>\r\n                <li> <NavLink className={navData => navData.isActive ? 'nav__link_active' : 'nav__link'} to='/dialogs'>Messages</NavLink> </li>\r\n                {/* <li> <NavLink className={navData => navData.isActive ? 'nav__link_active' : 'nav__link'} to='/news'>News</NavLink> </li>\r\n                <li> <NavLink className={navData => navData.isActive ? 'nav__link_active' : 'nav__link'} to='/music'>Music</NavLink> </li>\r\n                <li> <NavLink className={navData => navData.isActive ? 'nav__link_active' : 'nav__link'} to='/settings'>Settings</NavLink> </li> */}\r\n            </ul>\r\n            {/* <FriendsBarContainer /> */}\r\n        </nav>\r\n    \r\n    );\r\n}\r\n\r\nexport default Nav;","import FriendsBar from './FriendsBar';\r\nimport './FriendsBar.scss';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friendsData: state.sidebar.friendsData\r\n    };\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n}\r\n\r\nconst FriendsBarContainer = connect(mapStateToProps, mapDispatchToProps)(FriendsBar);\r\n\r\n\r\n\r\nexport default FriendsBarContainer;","export default __webpack_public_path__ + \"static/media/react.add74742.svg\";","import './Header.scss';\r\nimport userPhoto from '../../assets/images/userPhoto.png';\r\nimport logo from '../../assets/images/react.svg'\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = ({\r\n    isAuth,\r\n    login,\r\n    logout }) => {\r\n\r\n    return (\r\n        <header className='header'>\r\n            <div>\r\n                <a href=\"#\">\r\n                    <img className='header__logo' src={logo} alt='Logo'></img>\r\n                </a>\r\n            </div>\r\n            <div className='header__userBlock'>\r\n\r\n                {isAuth\r\n                    ? <div>\r\n                        <span className='header__currentUser'>{login}</span>\r\n                        <button className='header__logout' onClick={logout}>Logout</button>\r\n                    </div>\r\n                    : <div className='header__login'>\r\n                        <NavLink className='header__logout' to={'/login'}>Login</NavLink>\r\n                        <img src={userPhoto} alt=\"\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import { authApi } from \"../api/api\";\r\n\r\nconst SET_DATA = 'auth/SET_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                // isAuth: action.isAuth\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setData = (id, email, login, isAuth) => ({ type: SET_DATA, data: { id, email, login, isAuth } });\r\n\r\nexport const authProcess = () => {\r\n    return async (dispatch) => {\r\n        let response = await authApi.auth();\r\n\r\n        if (response.data.resultCode === 0) {\r\n            let { id, email, login } = response.data.data;\r\n            dispatch(setData(id, email, login, true));\r\n        }\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n    return async (dispatch) => {\r\n        let response = await authApi.login(email, password, rememberMe);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(authProcess());\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        let response = await authApi.logout();\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setData(null, null, null, false));\r\n        }\r\n    }\r\n}\r\n\r\nexport default authReducer","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./Header\";\r\nimport { logout } from \"../../redux/authReducer\";\r\nimport { getIsAuth, getLogin } from \"../../selectors/auth-selector\";\r\n\r\nconst HeaderContainer = (props) => {\r\n        return <Header {...props} />\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: getIsAuth(state),\r\n        login: getLogin(state),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    logout\r\n})(HeaderContainer)","import { Formik } from \"formik\";\r\nimport './LoginForm.scss';\r\n\r\nconst LoginForm = ({ login }) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{ email: '', password: '', checkbox: false, }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                setSubmitting(false);\r\n                login(values.email, values.password, values.checkbox);\r\n            }}>\r\n            {({\r\n                values,\r\n                handleChange,\r\n                handleSubmit,\r\n                isSubmitting,\r\n            }) =>\r\n            (<form onSubmit={handleSubmit}>\r\n                <input\r\n                    className='login__text login__input'\r\n                    type={'email'}\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    onChange={handleChange}\r\n                    value={values.email}\r\n                />\r\n                <input\r\n                    className='login__text login__input'\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={handleChange}\r\n                    value={values.password}\r\n                />\r\n                <div className='login__checkbox'>\r\n                    Stay in\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        name=\"checkbox\"\r\n                        onChange={handleChange}\r\n                        value={values.checkbox}\r\n                    />\r\n                </div>\r\n                <button\r\n                    className=\"login__button login__input\"\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting}\r\n                >\r\n                    Submit\r\n                </button>\r\n            </form>)}\r\n\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport './Login.scss';\r\nimport LoginForm from './LoginForm/LoginForm';\r\nimport { login } from '../../redux/authReducer';\r\nimport { getIsAuth } from '../../selectors/auth-selector';\r\n\r\nconst Login = ({ isAuth, login, }) => {\r\n    if (isAuth === true) {\r\n        return <Navigate to={'/profile'} />\r\n    }\r\n\r\n    return (\r\n        <div className='login'>\r\n            <div className='login__block'>\r\n                <h1>Login</h1>\r\n                <LoginForm login={login} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: getIsAuth(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    login\r\n})(Login)","import { authProcess } from \"./authReducer\";\r\n\r\nconst INITIAL_PROCESS = 'app/INITIAL_PROCESS';\r\n\r\nlet initialState = {\r\n    isInitialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIAL_PROCESS:\r\n            return {\r\n                ...state,\r\n                isInitialized: true\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initialProcess = () => ({ type: INITIAL_PROCESS })\r\n\r\nexport const initialization = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(authProcess());\r\n\r\n        Promise.all([promise]).then(() => {\r\n            dispatch(initialProcess());\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport default appReducer\r\n","import './App.css';\nimport './nullstyle.css';\nimport React, { useEffect } from 'react';\nimport News from './components/News/News';\nimport Settings from './components/Settings/Settings';\nimport Music from './components/Music/Music';\nimport { Route, Routes, Navigate } from 'react-router-dom';\nimport Nav from './components/Nav/Nav';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport { connect } from 'react-redux';\nimport { initialization } from './redux/appReducer';\nimport Preloader from './components/Common/Preloader/Preloader';\n\n\n//imports for lazy loading\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\n\nconst App = (props) => {\n  useEffect(() => {\n    props.initialization();\n  }, [])\n\n  if (!props.isInitialized) {\n    return <Preloader />\n  }\n\n  return (\n    <div className='wrapper'>\n      <HeaderContainer />\n      <Nav />\n      <div className='wrapper__main'>\n        <React.Suspense fallback={<Preloader />}>\n          <Routes>\n            <Route path='/profile/' element={<ProfileContainer />} />\n            <Route path='/profile/:id' element={<ProfileContainer />}></Route>\n            <Route path='/users' element={<UsersContainer />}></Route>\n            <Route path='/dialogs/*' element={<DialogsContainer />}></Route>\n            <Route path='/news/*' element={<News />}></Route>\n            <Route path='/music/*' element={<Music />}></Route>\n            <Route path='/settings/*' element={<Settings />}></Route>\n            <Route path='*' element={<Navigate to=\"/profile\" replace />}></Route>\n            <Route path='/login/*' element={<Login />}></Route>\n          </Routes>\n        </React.Suspense>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isInitialized: state.app.isInitialized\n  }\n}\n\nexport default connect(mapStateToProps, {\n  initialization\n})(App);\n","let initialState = {\r\n    friendsData: [\r\n        { name: 'John' },\r\n        { name: 'Nick' },\r\n        { name: 'Bob' },\r\n    ]\r\n};\r\n\r\nexport const sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;\r\n","import dialogsReducer from './dialogsReducer';\r\nimport profileReducer from './profileReducer';\r\nimport sidebarReducer from './sidebarReducer';\r\nimport usersReducer from './usersReducer';\r\nimport authReducer from './authReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport appReducer from './appReducer';\r\n\r\nconst { createStore, combineReducers, applyMiddleware } = require(\"redux\");\r\n\r\nlet reducers = combineReducers({\r\n    dialogsPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store","import './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        // 'API-KEY': '29e0a73c-1ae5-4aea-ad00-7b4e7d4d7efa'\r\n        'API-KEY': 'b6cafa4a-4de8-4e4c-9122-da31bae55591'\r\n    }\r\n})\r\n\r\nexport const usersApi = {\r\n    getUsers(currentPageNumber, maxPageSize) {\r\n        return instance.get(`users?page=${currentPageNumber}&count=${maxPageSize}`)\r\n    },\r\n\r\n    followUser(userID) {\r\n        return instance.post(`follow/${userID}`)\r\n    },\r\n\r\n    unfollowUser(userID) {\r\n        return instance.delete(`follow/${userID}`)\r\n    }\r\n}\r\n\r\nexport const profileApi = {\r\n    getProfile(userID) {\r\n        return instance.get(`profile/${userID}`)\r\n    },\r\n\r\n    requestUserStatus(userID) {\r\n        return instance.get(`profile/status/${userID}`)\r\n    },\r\n\r\n    updateUserStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    }\r\n    \r\n}\r\n\r\nexport const authApi = {\r\n    auth() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}"],"sourceRoot":""}