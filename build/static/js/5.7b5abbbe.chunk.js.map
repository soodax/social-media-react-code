{"version":3,"sources":["components/Users/User/User.jsx","assets/images/left-arrow.svg","assets/images/right-arrow.svg","components/Common/Paginator/Paginator.jsx","components/Users/Users.jsx","selectors/user-selector.js","components/Users/UsersContainer.jsx"],"names":["User","user","isFollowingProcess","unfollowUser","followUser","isAuth","className","to","id","src","photos","small","userPhoto","width","alt","name","status","followed","disabled","some","onClick","type","value","Paginator","onCurrentPageUpdate","currentPageNumber","maxUsersCount","maxPageSize","totalPagesCount","Math","ceil","pages","i","push","useState","currentPageGroup","setCurrentPageGroup","pageGroupCount","leftPageGroupBorder","rightPageGroupBorder","leftArrow","srcset","filter","number","map","index","rightArrow","Users","usersElements","getUsersElements","state","usersPage","users","getMaxUsersCount","getMaxPageSize","getCurrentPageNumber","getIsFetching","isFetching","getIsFollowingProcess","connect","getIsAuth","setCurrentPage","getUsers","useEffect","length","Preloader"],"mappings":"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","file":"static/js/5.7b5abbbe.chunk.js","sourcesContent":["import './User.scss';\r\nimport userPhoto from '../../../assets/images/userPhoto.png'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst User = ({\r\n    user,\r\n    isFollowingProcess,\r\n    unfollowUser,\r\n    followUser,\r\n    isAuth }) => {\r\n\r\n    return (\r\n        <div className='userItem'>\r\n            <div className='userItem__image'>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small != null\r\n                        ? user.photos.small\r\n                        : userPhoto} width=\"80\" alt=\"\" />\r\n                </NavLink>\r\n            </div>\r\n            <div className='userItem__main'>\r\n                <div className='userItem__info'>\r\n                    <div className='userItem__fullname'>{user.name}</div>\r\n                </div>\r\n                <div className='userItem__status'>\r\n                    {user.status != null\r\n                        ? user.status\r\n                        : 'No status'}\r\n                </div>\r\n            </div>\r\n            <div className='userItem__bottom'>\r\n                {user.followed\r\n                    ? <input\r\n                        disabled={isFollowingProcess.some(id => id === user.id)}\r\n                        onClick={() => { unfollowUser(user.id, isAuth) }}\r\n                        className=\"userItem__buttonUnfollow userItem__button\"\r\n                        type=\"button\"\r\n                        value=\"Unfollow\" />\r\n\r\n                    : <input\r\n                        disabled={isFollowingProcess.some(id => id === user.id)}\r\n                        onClick={() => { followUser(user.id, isAuth) }}\r\n                        className=\"userItem__buttonFollow userItem__button\"\r\n                        type=\"button\"\r\n                        value=\"Follow\" />\r\n                }\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default User\r\n","export default __webpack_public_path__ + \"static/media/left-arrow.d9f8e04d.svg\";","export default __webpack_public_path__ + \"static/media/right-arrow.c46bf849.svg\";","import { useState } from 'react';\r\nimport './Paginator.scss';\r\nimport leftArrow from '../../../assets/images/left-arrow.svg';\r\nimport rightArrow from '../../../assets/images/right-arrow.svg';\r\n\r\nconst Paginator = ({\r\n    onCurrentPageUpdate,\r\n    currentPageNumber,\r\n    maxUsersCount,\r\n    maxPageSize }) => {\r\n\r\n    let totalPagesCount = Math.ceil(maxUsersCount / maxPageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= totalPagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const [currentPageGroup, setCurrentPageGroup] = useState(1);\r\n    let pageGroupCount = Math.ceil(totalPagesCount / 10);\r\n    let leftPageGroupBorder = (currentPageGroup - 1) * 10 + 1;\r\n    let rightPageGroupBorder = (currentPageGroup * 10)\r\n\r\n    return (\r\n        <div className='pageSelectors'>\r\n            {currentPageGroup > 1\r\n                ? <button className='pageSelectors__nav' onClick={() => setCurrentPageGroup(currentPageGroup - 1)}>\r\n                    <img src={leftArrow} width='28' alt=\"left-arrow\" srcset=\"\" />\r\n                </button>\r\n                : null}\r\n\r\n            {pages.filter(number => number >= leftPageGroupBorder && number <= rightPageGroupBorder)\r\n                .map((number, index) => {\r\n                    return <input type=\"button\"\r\n                        key={index}\r\n                        onClick={() => onCurrentPageUpdate(number)}\r\n                        className={currentPageNumber === number\r\n                            ? 'pageSelector pageSelector__active'\r\n                            : 'pageSelector pageSelector__normal button'}\r\n                        value={number} />\r\n                })}\r\n            {pageGroupCount > currentPageGroup\r\n                ? <button className='pageSelectors__nav' type='button' onClick={() => setCurrentPageGroup(currentPageGroup + 1)}>\r\n                    <img src={rightArrow} width='28' alt=\"right-arrow\" />\r\n                </button>\r\n                : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator","import './Users.scss';\r\nimport User from './User/User';\r\nimport Paginator from '../Common/Paginator/Paginator';\r\n\r\n\r\nconst Users = ({\r\n    usersElements,\r\n    isFollowingProcess,\r\n    followUser,\r\n    unfollowUser,\r\n    pages,\r\n    currentPageNumber,\r\n    onCurrentPageUpdate,\r\n    maxUsersCount,\r\n    maxPageSize,\r\n    isAuth }) => {\r\n\r\n    return (\r\n        <div>\r\n            <Paginator pages={pages}\r\n                currentPageNumber={currentPageNumber}\r\n                onCurrentPageUpdate={onCurrentPageUpdate}\r\n                maxUsersCount={maxUsersCount}\r\n                maxPageSize={maxPageSize} />\r\n            {usersElements.map(user =>\r\n                <User key={user.id}\r\n                    user={user}\r\n                    isFollowingProcess={isFollowingProcess}\r\n                    followUser={followUser}\r\n                    unfollowUser={unfollowUser}\r\n                    isAuth={isAuth} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","export const getUsersElements = (state) => state.usersPage.users\r\n\r\nexport const getMaxUsersCount = (state) => state.usersPage.maxUsersCount\r\n\r\nexport const getMaxPageSize = (state) => state.usersPage.maxPageSize\r\n\r\nexport const getCurrentPageNumber = (state) => state.usersPage.currentPageNumber\r\n\r\nexport const getIsFetching = (state) => state.usersPage.isFetching\r\n\r\nexport const getIsFollowingProcess = (state) => state.usersPage.isFollowingProcess","import React, { useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {\r\n    setCurrentPage,\r\n    getUsers,\r\n    followUser,\r\n    unfollowUser\r\n} from '../../redux/usersReducer';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport {\r\n    getUsersElements,\r\n    getMaxUsersCount,\r\n    getMaxPageSize,\r\n    getCurrentPageNumber,\r\n    getIsFetching,\r\n    getIsFollowingProcess\r\n} from '../../selectors/user-selector';\r\nimport { getIsAuth } from '../../selectors/auth-selector';\r\n\r\nconst UsersContainer = ({\r\n    usersElements,\r\n    getUsers,\r\n    currentPageNumber,\r\n    maxPageSize,\r\n    setCurrentPage,\r\n    maxUsersCount,\r\n    isFollowingProcess,\r\n    followUser,\r\n    unfollowUser,\r\n    isFetching,\r\n    isAuth }) => {\r\n\r\n    useEffect(() => {\r\n        if (usersElements.length === 0) {\r\n            getUsers(currentPageNumber, maxPageSize);\r\n        }\r\n    }, [])\r\n\r\n    let onCurrentPageUpdate = (currentPageNumber) => {\r\n        setCurrentPage(currentPageNumber);\r\n        getUsers(currentPageNumber, maxPageSize);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {isFetching === true ? <Preloader /> : null}\r\n            <Users maxUsersCount={maxUsersCount}\r\n                maxPageSize={maxPageSize}\r\n                usersElements={usersElements}\r\n                currentPageNumber={currentPageNumber}\r\n                onCurrentPageUpdate={onCurrentPageUpdate}\r\n                isFollowingProcess={isFollowingProcess}\r\n                followUser={followUser}\r\n                unfollowUser={unfollowUser}\r\n                isAuth={isAuth}/>\r\n        </div>)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        usersElements: getUsersElements(state),\r\n        maxUsersCount: getMaxUsersCount(state),\r\n        maxPageSize: getMaxPageSize(state),\r\n        currentPageNumber: getCurrentPageNumber(state),\r\n        isFetching: getIsFetching(state),\r\n        isFollowingProcess: getIsFollowingProcess(state),\r\n        isAuth: getIsAuth(state)\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    setCurrentPage,\r\n    getUsers,\r\n    followUser,\r\n    unfollowUser\r\n})(UsersContainer);\r\n\r\n"],"sourceRoot":""}