{"version":3,"sources":["components/Dialogs/UserItem/UserItem.jsx","components/Dialogs/UserMessage/UserMessage.jsx","assets/images/sendMessageIcon.png","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["UserItem","id","name","className","to","UserMessage","message","AddMessageForm","props","initialValues","onSubmit","values","setSubmitting","addMessage","handleChange","handleSubmit","isSubmitting","type","onChange","value","maxLength","disabled","width","src","sendMessageIcon","alt","Dialogs","usersElements","messagesElements","compose","connect","state","dialogsPage","usersData","map","el","messagesData","isAuth","getIsAuth"],"mappings":"kLAWeA,EARE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACpB,OACI,8BACI,cAAC,IAAD,CAASC,UAAU,WAAWC,GAAIH,EAAlC,SAAuCC,OCMpCG,G,MAVK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACnB,OACI,qBAAKH,UAAU,cAAf,SACI,qBAAKA,UAAU,oBAAf,SACKG,Q,gCCNF,MAA0B,4CCgD1BC,EA5CQ,SAACC,GAMpB,OACI,cAAC,IAAD,CACIC,cAAe,CAAEH,QAAS,IAC1BI,SAAU,SAACC,EAAD,GAAgC,IAPhCL,EAOWM,EAAoB,EAApBA,cAPXN,EAQKK,EAAOL,QAP1BE,EAAMK,WAAWP,GAQTK,EAAOL,QAAU,GACjBM,GAAc,IALtB,SAQK,gBACGD,EADH,EACGA,OACAG,EAFH,EAEGA,aACAC,EAHH,EAGGA,aACAC,EAJH,EAIGA,aAJH,OAMA,uBAAMb,UAAU,kBAAkBO,SAAUK,EAA5C,UAEG,uBACIZ,UAAU,iBACVc,KAAK,OACLf,KAAK,UACLgB,SAAUJ,EACVK,MAAOR,EAAOL,QACdc,UAAU,OAGd,wBACIjB,UAAU,kBACVc,KAAK,SACLI,SAAUL,EAHd,SAKI,qBAAKM,MAAO,GAAIC,IAAKC,EAAiBC,IAAI,cCf/CC,EAvBC,SAAC,GAGK,IAFlBC,EAEiB,EAFjBA,cACAC,EACiB,EADjBA,iBACAf,EAAiB,EAAjBA,WAEA,OACI,sBAAKV,UAAU,UAAf,UACI,qBAAKA,UAAU,iBAAf,SACKwB,IAEL,sBAAKxB,UAAU,oBAAf,UACI,qBAAKA,UAAU,gBAAf,SACKyB,IAEL,cAAC,EAAD,CAAgBf,WAAYA,OAEhC,qBAAKV,UAAU,kBAAf,wB,gCCEG0B,4BACXC,aAboB,SAACC,GACrB,MAAO,CACHJ,cAAeI,EAAMC,YAAYC,UAC5BC,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAAsBjC,KAAMiC,EAAGjC,KAAMD,GAAIkC,EAAGlC,IAA7BkC,EAAGlC,OAEjC2B,iBAAkBG,EAAMC,YAAYI,aAC/BF,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAAyB7B,QAAS6B,EAAG7B,QAASL,GAAIkC,EAAGlC,IAAnCkC,EAAGlC,OAEpCoC,OAAQC,YAAUP,MAKG,CACrBlB,iBAFOgB,CAKbH,I","file":"static/js/4.63779db4.chunk.js","sourcesContent":["import './UserItem.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst UserItem = ({ id, name }) => {\r\n    return (\r\n        <div>\r\n            <NavLink className='userLink' to={id}>{name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserItem;","import './UserMessage.scss';\r\n\r\nconst UserMessage = ({ message }) => {\r\n    return (\r\n        <div className='userMessage'>\r\n            <div className='userMessage__item'>\r\n                {message}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserMessage;","export default __webpack_public_path__ + \"static/media/sendMessageIcon.a8bedf1e.png\";","import './AddMessageForm.scss';\r\nimport { Formik } from 'formik';\r\nimport sendMessageIcon from '../../../assets/images/sendMessageIcon.png';\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    let addMessage = (message) => {\r\n        props.addMessage(message);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ message: '' }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                addMessage(values.message);\r\n                values.message = '';\r\n                setSubmitting(false);\r\n\r\n            }}>\r\n            {({\r\n                values,\r\n                handleChange,\r\n                handleSubmit,\r\n                isSubmitting\r\n            }) =>\r\n            (<form className=\"dialogs__inputs\" onSubmit={handleSubmit}>\r\n\r\n                <input\r\n                    className=\"dialogs__input\"\r\n                    type=\"text\"\r\n                    name=\"message\"\r\n                    onChange={handleChange}\r\n                    value={values.message}\r\n                    maxLength='64'\r\n                />\r\n\r\n                <button\r\n                    className=\"dialogs__button\"\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting}\r\n                >\r\n                    <img width={32} src={sendMessageIcon} alt=\"\" />\r\n                </button>\r\n            </form>)}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default AddMessageForm","import './Dialogs.scss';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\nconst Dialogs = ({\r\n    usersElements,\r\n    messagesElements,\r\n    addMessage }) => {\r\n\r\n    return (\r\n        <div className='dialogs'>\r\n            <div className='dialogs__users'>\r\n                {usersElements}\r\n            </div>\r\n            <div className=\"dialogs__messages\">\r\n                <div className='dialogs__chat'>\r\n                    {messagesElements}\r\n                </div>\r\n                <AddMessageForm addMessage={addMessage} />\r\n            </div>\r\n            <div className=\"dialogs__banner\">\r\n                Banner\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import UserItem from './UserItem/UserItem';\r\nimport UserMessage from './UserMessage/UserMessage';\r\nimport { addMessage } from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getIsAuth } from '../../selectors/auth-selector';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        usersElements: state.dialogsPage.usersData\r\n            .map(el => <UserItem key={el.id} name={el.name} id={el.id} />),\r\n\r\n        messagesElements: state.dialogsPage.messagesData\r\n            .map(el => <UserMessage key={el.id} message={el.message} id={el.id}></UserMessage>),\r\n            \r\n        isAuth: getIsAuth(state)\r\n    };\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        addMessage\r\n    }),\r\n    // withAuthRedirect\r\n)(Dialogs)\r\n"],"sourceRoot":""}